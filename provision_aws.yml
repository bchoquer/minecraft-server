---
- name: Create and Launch AWS instance
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Launch new AWS instance
      amazon.aws.ec2_instance:
        key_name: mykeyfile  # Key created from AWS 
        instance_type: t2.medium
        image_id: ami-0cf2b4e024cdb6960
        region: us-west-2 #Oregon
        security_group: "Minecraft Security" #need to create/fix 
        count: 1
        wait: yes
        tags:
          Name: minecraft-server
      register: ec2

    - name: Find the instance with the specific tag
      set_fact:
        named_instance: "{{ ec2.instances | selectattr('tags.Name', 'equalto', 'minecraft-server') | first }}"
   
    - name: Debug named instance
      debug:
        var: named_instance

    - name: Wait for instance public IP to be available
      local_action:
        module: wait_for
        host: "{{ named_instance.public_ip_address }}"
        port: 22
        delay: 60
        timeout: 320
        state: started
      until: named_instance.public_ip_address is defined and named_instance.public_ip_address != ''
      retries: 10
      delay: 30
      when: named_instance is defined

    - name: Wait for instance to start 
      wait_for:
        host: "{{ named_instance.public_ip_address }}"
        port: 22
        delay: 60
        timeout: 320
        state: started
      when: named_instance is defined

    - name: Add new instance to group
      add_host:
        hostname: "{{ named_instance.public_ip_address }}"
        groupname: launched
      when: named_instance is defined

    #adding playbook tmp inventory folder is needed 
    - name: Ensure temporary inventory directory exists
      file:
        path: /tmp/ansible-inventory
        state: directory
        mode: '0755'

    #Create a shared inventory to seperate scripts and be able to use instance across playbooks
    - name: Add new instance to inventory file
      copy:
        content: |
          [launched]
          {{ named_instance.public_ip_address }} ansible_user=ubuntu 
        dest: /tmp/ansible-inventory/hosts
      # when:
      #   - ec2.instances is defined
      #   - ec2.instances | length > 0
      #   - ec2.instances[-1].state.name == 'running'
      # loop: "{{ ec2.instances }}"
      # loop_control:
        # loop_var: item #ensures we do not have undefined item var